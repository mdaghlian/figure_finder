#!/usr/bin/env python
#$ -j Y
#$ -cwd
#$ -V


import os
opj = os.path.join
from datetime import datetime
import numpy as np
import sys

# MATPLOTLIB STUFF
import matplotlib as mpl

import pandas as pd
#
import figure_finder as ff

import ast
import getopt
import warnings
import json
warnings.filterwarnings('ignore')

def main(argv):

    """
---------------------------------------------------------------------------------------------------
ff_REP_show_rep

Usage:
    ff_REP_show_rep [arguments] [options]
    Opens the html files (using firefox), of the reports which match the input pattern (i.e., have 
    the correct tags)

Arguments:
    -t|--tag        can be a single word, or a list separated by commas (with no whitespace)           
    -e|--exclude    can be a single word, or a list separated by commas (with no whitespace)           
    -i|--idx        if multiple reports match the pattern, select this report    

Example:
    ff_REP_show_rep -t blah,bloop -e hello
    # if more than one file matches this pattern then you will get a list of file names with an 
    # associated id, use idx to specify which one you want
    ff_REP_show_rep -t blah,bloop -e hello -i 0

---------------------------------------------------------------------------------------------------
"""

    rep_tags    = None
    exclude     = None
    idx         = []

    try:
        opts = getopt.getopt(argv,"ghs:t:e:i:",["help", "tag=", "exclude=", "idx="])[0]
    except getopt.GetoptError:
        print(main.__doc__)
        sys.exit(2)
    
    for opt, arg in opts:
        if opt in ('-h', '--help'):
            print(main.__doc__)
            sys.exit()
        elif opt in ("-t", "--tag"):
            rep_tags = arg.split(',')
        elif opt in ("-e", "--exclude"):
            exclude = arg.split(',')
        elif opt in ("-i", "--idx"):
            idx = arg
            print(idx)
            if idx!="all":
                idx = int(arg)
    
    ff.REP_show_REP_with_tags(rep_tags, exclude=exclude, idx=idx)

    return
    

if __name__ == "__main__":
    main(sys.argv[1:])
