#!/usr/bin/env python
#$ -j Y
#$ -cwd
#$ -V


import os
opj = os.path.join
from datetime import datetime
import numpy as np
import sys

# MATPLOTLIB STUFF
import matplotlib as mpl

import pandas as pd
#
import figure_finder as ff

import ast
import getopt
import warnings
import json
warnings.filterwarnings('ignore')

def main(argv):

    """
---------------------------------------------------------------------------------------------------
ff_REP_print_db_property

Usage:    
    Prints the specified properties for a db entry    
    Prints all the tags associated with a *FIGURE* matching the search terms

Arguments:
    -p|--props       can be a single word, or a list separated by commas (with no whitespace)           
        >> file_date
        >> file_name
        >> file_path
        >> html_path
        >> rep_tags
        >> num_figs
        >> report_id    
    -t|--tag        can be a single word, or a list separated by commas (with no whitespace)           
    -e|--exclude    can be a single word, or a list separated by commas (with no whitespace)           
    -i|--idx        if multiple figures match the pattern, select this figure    

Example:
---------------------------------------------------------------------------------------------------
"""
    props       = None
    rep_tags    = ''
    exclude     = None
    idx         = []

    try:
        opts = getopt.getopt(argv,"ghs:p:t:e:i:",["help", "props=", "tag=", "exclude=", "idx="])[0]
    except getopt.GetoptError:
        print(main.__doc__)
        sys.exit(2)
    
    for opt, arg in opts:
        if opt in ('-h', '--help'):
            print(main.__doc__)
            sys.exit()
        elif opt in ("-p", "--props"):
            props = arg.split(',')
            if not isinstance(props, list):
                props = [props]
        elif opt in ("-t", "--tag"):
            rep_tags = arg.split(',')
        elif opt in ("-e", "--exclude"):
            exclude = arg.split(',')
        elif opt in ("-i", "--idx"):
            idx = int(arg)
    rep_db_match = ff.REP_find_rep_with_tags(rep_tags, exclude=exclude)

    if (len(rep_db_match)>1) & (idx==[]):
        print('More than 1 reports match the description')
        print('Be more specific or select the file, using idx=X, (or -i X)')
        print('Files found include:')
    print(rep_db_match.index)
    if idx!=[]:
        pd_idx = rep_db_match.index[idx]
        rep_db_match = rep_db_match.loc[pd_idx]
    for i_entry in rep_db_match.index:
        this_str = ''
        for i_prop in props:            
            this_str += f'| {rep_db_match.loc[i_entry][i_prop]}'

        print(f'{i_entry:03}, {this_str}')

    return

if __name__ == "__main__":
    main(sys.argv[1:])
